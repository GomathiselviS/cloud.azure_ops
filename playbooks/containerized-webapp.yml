- name: Deploy existing python app to container instance on azure
  hosts: localhost
  gather_facts: no

  collections:
  - cloud.azure_roles
  - azure.azcollection

  vars_files:
  - vars/containerized-webapp.yml

  tasks:
  - name: Ensure resource group is defined
    fail:
      msg: "Azure Resource group must be defined as azure_resource_group"
    when: azure_resource_group is not defined

  - name: Ensure pgsql server name is defined
    fail:
      msg: 'Azure PostgreSQL server name must be defined as azure_postgresql_name'
    when: azure_postgresql_name is not defined

  - name: Ensure application image name is defined
    fail:
      msg: 'Application image must be defined as azure_app_image'
    when: azure_app_image is not defined

  - name: Get pgsql info
    azure_rm_postgresqlserver_info:
      resource_group: '{{ azure_resource_group }}'
      name: '{{ azure_postgresql_name }}'
    register: psql_info

  - name: Ensure PostgreSQL server exists
    fail:
      msg: 'No PostgreSQL instance found in resource group'
    when: psql_info.servers | length == 0

  - name: Create containerized application
    azure_rm_containerinstance:
      resource_group: '{{ azure_resource_group }}'
      name: '{{ azure_resource_group }}-container-group'
      force_update: yes
      os_type: linux
      ip_address: public
      containers:
        - name: "{{ azure_app_container_name }}"
          image: "{{ azure_app_image }}"
          memory: "{{ azure_app_mem }}"
          ports: "{{ azure_app_ports }}"
          environment_variables: "{{ azure_app_env_vars }}"
    register: app

  - name: Print application ip
    debug:
      msg: "Web application accessible at  http://{{ app.ip_address }}:5000"