---
- name: Define resource group name
  ansible.builtin.set_fact:
    resource_group: netstack-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}
    azure_tags:
      cloud.azure_roles: azure_manage_networking_stack

- name: Test azure_manage_networking_stack role
  block:
    - name: Define common variables
      ansible.builtin.set_fact:
        azure_virtual_network: "{{ resource_group }}-vnet-00"
        azure_subnet: "{{ resource_group }}-subnet-00"
        azure_region: eastus
        azure_resource_group: "{{ resource_group }}"
        azure_vnet_address_prefixes_cidr:
          - 10.16.0.0/16
        azure_subnet_address_prefixes_cidr: 10.16.0.0/24

    - name: Create a networking stack
      ansible.builtin.include_role:
        name: cloud.azure_roles.azure_manage_networking_stack
      vars:
        operation: create

    - name: Retrieve resource group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ resource_group }}"
      register: resource

    - name: Assert that resource group was created
      ansible.builtin.assert:
        that:
          - resource.resourcegroups | length == 1

    - name: Retrieve virtual network
      azure.azcollection.azure_rm_virtualnetwork_info:
        name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: vnet

    - name: Assert the virtual network was created
      ansible.builtin.assert:
        that:
          - vnet.virtualnetworks | length == 1

    - name: Retrieve subnet
      azure.azcollection.azure_rm_subnet_info:
        name: "{{ azure_subnet }}"
        virtual_network_name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: subnet

    - name: Assert that subnet was created
      ansible.builtin.assert:
        that:
          - subnet.subnets | length == 1

    - name: Delete subnet using azure_manage_networking_stack role
      ansible.builtin.include_role:
        name: cloud.azure_roles.azure_manage_networking_stack
      vars:
        operation: delete
        delete_option: subnet

    - name: Retrieve resource group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ resource_group }}"
      register: resource

    - name: Assert that resource group still exists
      ansible.builtin.assert:
        that:
          - resource.resourcegroups | length == 1

    - name: Retrieve virtual network
      azure.azcollection.azure_rm_virtualnetwork_info:
        name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: vnet

    - name: Assert that virtual network still exists
      ansible.builtin.assert:
        that:
          - vnet.virtualnetworks | length == 1

    - name: Retrieve subnet
      azure.azcollection.azure_rm_subnet_info:
        name: "{{ azure_subnet }}"
        virtual_network_name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: subnet
      ignore_errors: true

    - name: Assert that subnet was deleted
      ansible.builtin.assert:
        that:
          - subnet is failed
          - subnet.msg == 'Could not get facts for Subnet.'

    - name: Delete virtual network using azure_manage_networking_stack role
      ansible.builtin.include_role:
        name: cloud.azure_roles.azure_manage_networking_stack
      vars:
        operation: delete
        delete_option: virtual_network

    - name: Retrieve resource group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ resource_group }}"
      register: resource

    - name: Assert that resource group still exists
      ansible.builtin.assert:
        that:
          - resource.resourcegroups | length == 1

    - name: Retrieve virtual network
      azure.azcollection.azure_rm_virtualnetwork_info:
        name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: vnet

    - name: Assert that virtual network was deleted
      ansible.builtin.assert:
        that:
          - vnet.virtualnetworks | length == 0

    - name: Set virtual network and subnet variables
      ansible.builtin.set_fact:
        azure_virtual_network: "{{ resource_group }}-vnet-01"
        azure_subnet: "{{ resource_group }}-subnet-01"

    - name: Create a networking stack (with existing resource group)
      ansible.builtin.include_role:
        name: cloud.azure_roles.azure_manage_networking_stack
      vars:
        operation: create

    - name: Retrieve resource group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ resource_group }}"
      register: resource

    - name: Assert that resource group still exists
      ansible.builtin.assert:
        that:
          - resource.resourcegroups | length == 1

    - name: Retrieve virtual network
      azure.azcollection.azure_rm_virtualnetwork_info:
        name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: vnet

    - name: Assert that virtual network was created
      ansible.builtin.assert:
        that:
          - vnet.virtualnetworks | length == 1

    - name: Retrieve subnet
      azure.azcollection.azure_rm_subnet_info:
        name: "{{ azure_subnet }}"
        virtual_network_name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: subnet

    - name: Assert that subnet was created
      ansible.builtin.assert:
        that:
          - subnet.subnets | length == 1

    - name: Delete all resource created using azure_manage_networking_stack role
      ansible.builtin.include_role:
        name: cloud.azure_roles.azure_manage_networking_stack
      vars:
        operation: delete

    - name: Retrieve resource group
      azure.azcollection.azure_rm_resourcegroup_info:
        name: "{{ resource_group }}"
      register: resource

    - name: Assert that resource group was deleted
      ansible.builtin.assert:
        that:
          - resource.resourcegroups | length == 0

    - name: Retrieve virtual network
      azure.azcollection.azure_rm_virtualnetwork_info:
        name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: vnet

    - name: Assert that virtual network was deleted
      ansible.builtin.assert:
        that:
          - vnet.virtualnetworks | length == 0

    - name: Retrieve subnet
      azure.azcollection.azure_rm_subnet_info:
        name: "{{ azure_subnet }}"
        virtual_network_name: "{{ azure_virtual_network }}"
        resource_group: "{{ resource_group }}"
      register: subnet
      ignore_errors: true

    - name: Assert that subnet was deleted
      ansible.builtin.assert:
        that:
          - subnet is failed
          - subnet.msg == 'Could not get facts for Subnet.'

  always:
    - name: Delete resource group # noqa ignore-errors
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ azure_resource_group }}"
        state: absent
        force_delete_nonempty: true
      ignore_errors: true
