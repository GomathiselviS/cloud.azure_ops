---
- name: Define resource group name
  ansible.builtin.set_fact:
    resource_group: test-{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=6') }}
    azure_tags:
      cloud.azure_roles: azure_load_balancer_with_public_ip

- name: Define region
  ansible.builtin.set_fact:
    azure_region: canadacentral

- name: Test load balancer role
  block:
    - name: Test invalid creation of load balancer (no name)
      block:
        - name: Create load balancer
          ansible.builtin.import_role:
            name: azure_load_balancer_with_public_ip
      rescue:
        - name: Print error message
          ansible.builtin.debug:
            msg: Failed when attempting to create a load balancer with no name. Continue...

    - name: Test creation of load balancer with all defaults
      block:
        - name: Create load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was successfully created with defaults
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ resource_group }}-lb-public-ip')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.loadBalancingRules | length == 0
              - lb_info.ansible_info.azure_loadbalancers[0].properties.probes | length == 0
              - lb_info.ansible_info.azure_loadbalancers[0].sku.name == 'Basic'
              - lb_info.ansible_info.azure_loadbalancers[0].tags is undefined

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve resource group
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group still exists
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom public ip
      block:
        - name: Create load balancer with public ip specified
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"
              public_ip_name: testinput

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was successfully created with public IP input
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('testinput')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom domain name
      block:
        - name: Create load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              domain_name: "{{ resource_group | replace('_', '-') }}-{{ azure_region | replace('_', '-') }}-lb"
              name: "{{ resource_group }}-lb"

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Get lb's public ip info
          azure.azcollection.azure_rm_resource_info:
            url: "{{ lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id }}"
          register: pip

        - name: Assert that load balancer was successfully created & domain name was assigned to public ip
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - pip.response[0].properties.dnsSettings.fqdn == '{{ resource_group | replace('_', '-') }}-{{ azure_region | replace('_', '-') }}-lb.canadacentral.cloudapp.azure.com'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ resource_group }}-lb-public-ip')
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom frontend ip conf
      block:
        - name: Create load balancer with custom frontend ip conf
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              frontend_ip_configurations:
                - name: "{{ resource_group }}-frontend"
                  public_ip_address: "{{ resource_group }}-lb-public-ip"
              name: "{{ resource_group }}-lb"

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was successfully created with input frontend ip configurations
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == '{{ resource_group }}-frontend'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ resource_group }}-lb-public-ip')

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom backend address pool
      block:
        - name: Create load balancer with backend address pool input
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              backend_address_pools:
                - name: "{{ resource_group }}-vm-pool"
              name: "{{ resource_group }}-lb"

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was successfully created with input backend address pool
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.backendAddressPools[0].name == '{{ resource_group }}-vm-pool'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].name == 'default'
              - lb_info.ansible_info.azure_loadbalancers[0].properties.frontendIPConfigurations[0].properties.publicIPAddress.id is search('{{ resource_group }}-lb-public-ip')

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

    - name: Test creation of load balancer with custom probes, rules, tags, and sku
      block:
        - name: Create load balancer with custom probes, rules, tags, and sku input
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: create
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"
              probes:
                - name: lb-probe
                  port: 5000
              rules:
                - name: lb-rule
                  probe: lb-probe
                  backend_address_pool: default
                  frontend_ip_configuration: default
                  frontend_port: 5000
                  backend_port: 5000
              sku: Standard
              tags:
                tag0: test0
                tag1: test1

        - name: Get resource group info
          azure.azcollection.azure_rm_resourcegroup_info:
            name: "{{ resource_group }}"
          register: rg

        - name: Assert that resource group was created
          ansible.builtin.assert:
            that:
              - rg.resourcegroups | length == 1

        - name: Get lb info
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was successfully created with input custom probes, rules, tags, and sku
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 1
              - lb_info.ansible_info.azure_loadbalancers[0].properties.loadBalancingRules | length > 0
              - lb_info.ansible_info.azure_loadbalancers[0].properties.probes | length > 0
              - lb_info.ansible_info.azure_loadbalancers[0].sku.name == 'Standard'
              - lb_info.ansible_info.azure_loadbalancers[0].tags | length == 2

        - name: Delete load balancer
          ansible.builtin.include_role:
            name: cloud.azure_roles.azure_load_balancer_with_public_ip
          vars:
            operation: delete
            azure_resource_group: "{{ resource_group }}"
            azure_load_balancer:
              name: "{{ resource_group }}-lb"

        - name: Retrieve load balancer
          azure.azcollection.azure_rm_loadbalancer_info:
            resource_group: "{{ resource_group }}"
          register: lb_info

        - name: Assert that load balancer was deleted
          ansible.builtin.assert:
            that:
              - lb_info.ansible_info.azure_loadbalancers | length == 0

  always:
    - name: Delete resource group # noqa ignore-errors
      azure.azcollection.azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        state: absent
        force_delete_nonempty: true
      ignore_errors: true
